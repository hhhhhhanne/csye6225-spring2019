{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Sample CloudFormation Template",
  "Parameters": {
    "StackName": {
      "Type": "String"
    },
    "AMIInageId": {
      "Type": "String"
    },
    "VPCId": {
      "Type": "String"
    },
    "AppSubNetId": {
      "Type": "String"
    },
    "DbSubNetId": {
      "Type": "String"
    },
    "AppSecurityGroupId": {
      "Type": "String"
    },
    "DBSecurityGroupId": {
      "Type": "String"
    },
    "UserDomainName": {
      "Type": "String"
    },
    "HostedZoneId": {
      "Type": "String"
    },
    "ServiceRoleArn": {
      "Type": "String"
    },
    "SSLCertificateArn": {
      "Type": "String"
    },
    "LBSecurityGroupId": {
      "Type" : "String"
    }
  },
  "Resources": {
    "WAFOWASP" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "Tags" : [],
        "TemplateURL" : "https://s3.amazonaws.com/cf-templates-12q9g4ghf6lju-us-east-1/owasp_10_base_no_csrf.yml",
        "TimeoutInMinutes" : 20
      }
    },

    "DBSubnetGroup":{
      "Type":"AWS::RDS::DBSubnetGroup",
      "Properties":{
        "DBSubnetGroupDescription":"description",
        "SubnetIds":[
          {
            "Ref":"AppSubNetId"
          },
          {
            "Ref":"DbSubNetId"
          }
        ]
      }
    },
    "DbSecurityGroup": {
      "Type": "AWS::RDS::DBSecurityGroup",
      "Properties": {
        "GroupDescription": "security group for db",
        "EC2VpcId": {
          "Ref": "VPCId"
        },
        "DBSecurityGroupIngress": [
          {
            "EC2SecurityGroupId": { "Ref": "AppSecurityGroupId" }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {"Fn::Join": ["",[{"Ref": "AWS::StackName"},"-csye6225-DBSecurityGroup"]]}
          }
        ]
      }
    },


    "DynamoDB": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "csye6225",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ]
      }
    },

    "AppLBTargetGroup" : {
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties" : {
        "HealthCheckIntervalSeconds" : 30,
        "HealthCheckTimeoutSeconds" : 5,
        "Name":"AppLBTargetGroup",
        "HealthyThresholdCount" : 3,
        "Port" : 8080,
        "Protocol" : "HTTP",
        "UnhealthyThresholdCount" : 4,
        "Matcher" : {
          "HttpCode" : "200"
        },
        "VpcId" : {"Ref" : "VPCId"},
        "Tags" : [
          { "Key" : "LBTargetGroup", "Value" : "AppLBTargetGroup" }
        ]
      }
    },

    "NoWAFAppLBTargetGroup" : {
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties" : {
        "HealthCheckIntervalSeconds" : 30,
        "HealthCheckTimeoutSeconds" : 5,
        "Name":"NoWAFAppLBTargetGroup",
        "HealthyThresholdCount" : 3,
        "Port" : 8080,
        "Protocol" : "HTTP",
        "UnhealthyThresholdCount" : 4,
        "Matcher" : {
          "HttpCode" : "200"
        },
        "VpcId" : {"Ref" : "VPCId"},
        "Tags" : [
          { "Key" : "LBTargetGroup", "Value" : "NoWAFAppLBTargetGroup" }
        ]
      }
    },

    "AppLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties" : {
        "Scheme":"internet-facing",
        "Name":"ApplicationLoadBalancer",
        "Subnets" : [{ "Ref" : "AppSubNetId"}, {"Ref" : "DbSubNetId"}],
        "SecurityGroups" : [ {"Ref" : "LBSecurityGroupId"} ],
        "Type" : "application"
      }
    },

    "AppLoadBalancerNoWAF" : {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties" : {
        "Scheme":"internet-facing",
        "Name":"ApplicationLoadBalancerNoWAF",
        "Subnets" : [{ "Ref" : "AppSubNetId"}, {"Ref" : "DbSubNetId"}],
        "SecurityGroups" : [ {"Ref" : "LBSecurityGroupId"} ],
        "Type" : "application"
      }
    },

    "AppLBListenerHTTP" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "DefaultActions" : [{
          "Type" : "forward",
          "TargetGroupArn" : { "Ref" : "AppLBTargetGroup" }
        }],
        "LoadBalancerArn" : { "Ref" : "AppLoadBalancer" },
        "Port" : "80",
        "Protocol" : "HTTP"
      }
    },

    "AppLBListenerHTTPS" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "Certificates" : [
          {"CertificateArn" : { "Ref" : "SSLCertificateArn"}}
        ],
        "DefaultActions" : [{
          "Type" : "forward",
          "TargetGroupArn" : { "Ref" : "AppLBTargetGroup" }
        }],
        "LoadBalancerArn" : { "Ref" : "AppLoadBalancer" },
        "Port" : "443",
        "Protocol" : "HTTPS"
      }
    },

    "NoWAFAppLBListenerHTTPS" : {
      "Type" : "AWS::ElasticLoadBalancingV2::Listener",
      "Properties" : {
        "Certificates" : [
          {"CertificateArn" : { "Ref" : "SSLCertificateArn"}}
        ],
        "DefaultActions" : [{
          "Type" : "forward",
          "TargetGroupArn" : { "Ref" : "NoWAFAppLBTargetGroup" }
        }],
        "LoadBalancerArn" : { "Ref" : "AppLoadBalancerNoWAF" },
        "Port" : "443",
        "Protocol" : "HTTPS"
      }
    },

    "MyDB" : {
      "Type": "AWS::RDS::DBInstance",
      "Properties" : {
        "DBInstanceIdentifier": "csye6225-spring2019",
        "DBName" : "csye6225",
        "AllocatedStorage": "5",
        "DBInstanceClass": "db.t2.medium",
        "Engine": "MySQL",
        "EngineVersion": "5.6",
        "MasterUsername": "csye6225master",
        "MasterUserPassword": "csye6225password",
        "PubliclyAccessible" : true,
        "DBSecurityGroups": [{ "Ref": "DbSecurityGroup" }],
        "DBSubnetGroupName" : { "Ref" :  "DBSubnetGroup" },
        "MultiAZ": false
      }
    },

    "Topic": {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "DisplayName" : "ResetPassword",
        "TopicName" : "Reset"
      }
    },

    "AutoScalingGroup":{
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AutoScalingGroupName" : "CSYE6225AutoScalingGroup",
        "VPCZoneIdentifier" : [
          { "Ref":  "AppSubNetId" }
        ],
        "AvailabilityZones" : [ "us-east-1a" ],
        "Cooldown" : "60",
        "LaunchConfigurationName" : {"Ref":"AsgLaunchConfig"},
        "DesiredCapacity" : "3",
        "MinSize" : "3",
        "MaxSize" : "10",
        "TargetGroupARNs":[{"Ref": "AppLBTargetGroup"}, { "Ref" : "NoWAFAppLBTargetGroup"}],
        "Tags" : [ {
          "Key" : "Name",
          "Value" : "CSYE6225-CF-DeploymentGroup",
          "PropagateAtLaunch" : "true"
        } ]
      }
    },

    "WebServerScaleUpPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "AutoScalingGroup"
        },
        "Cooldown": "60",
        "ScalingAdjustment": "1"
      }
    },
    "WebServerScaleDownPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "AutoScalingGroup"
        },
        "Cooldown": "60",
        "ScalingAdjustment": "-1"
      }
    },
    "CPUAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-up if CPU > 10% for 1 minutes",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "2",
        "Threshold": "10",
        "AlarmActions": [
          {
            "Ref": "WebServerScaleUpPolicy"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "AutoScalingGroup"
            }
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold"
      }
    },
    "CPUAlarmLow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-down if CPU < 5% for 1 minutes",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "60",
        "EvaluationPeriods": "2",
        "Threshold": "5",
        "AlarmActions": [
          {
            "Ref": "WebServerScaleDownPolicy"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "AutoScalingGroup"
            }
          }
        ],
        "ComparisonOperator": "LessThanThreshold"
      }
    },

    "AsgLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId" : {
          "Ref": "AMIInageId"
        },
        "InstanceType": "t2.micro",
        "SecurityGroups": [{ "Ref": "AppSecurityGroupId" }],
        "IamInstanceProfile":"EC2InstanceProfile",
        "KeyName": "assignment5",
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash",
                "sudo apt-get update",
                {
                  "Fn::Join": [
                    "",
                    [
                      "echo \"RDS=\\\"",
                      {
                        "Fn::GetAtt": [
                          "MyDB",
                          "Endpoint.Address"
                        ]
                      },
                      "\\\"\" >> /home/centos/mysqlsetting.txt \n"
                    ]
                  ]
                },
                "sudo service codedeploy-agent start",
                "sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/home/centos/awslogs.json -s > /home/centos/ctl.txt",
                "sudo systemctl start amazon-cloudwatch-agent.service",
                "sudo systemctl enable amazon-cloudwatch-agent.service"
              ]
            ]
          }
        }
      }
    },

    "MyDNSGroup": {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : { "Ref": "UserDomainName" },
        "RecordSets" : [
          {
            "Name" : { "Ref": "UserDomainName" },
            "Type" : "A",
            "AliasTarget" : {
              "HostedZoneId" : { "Fn::GetAtt" : ["AppLoadBalancer", "CanonicalHostedZoneID"] },
              "DNSName" : { "Fn::GetAtt" : ["AppLoadBalancer","DNSName"] }
            }
          }
        ]
      }
    },

    "NoWAFDNSGroup": {
      "Type" : "AWS::Route53::RecordSetGroup",
      "Properties" : {
        "HostedZoneName" : { "Ref": "UserDomainName" },
        "RecordSets" : [
          {
            "Name" : { "Fn::Join": ["",[ "nowaf.", {"Ref": "UserDomainName"}]] },
            "Type" : "A",
            "AliasTarget" : {
              "HostedZoneId" : { "Fn::GetAtt" : ["AppLoadBalancerNoWAF", "CanonicalHostedZoneID"] },
              "DNSName" : { "Fn::GetAtt" : ["AppLoadBalancerNoWAF","DNSName"] }
            }
          }
        ]
      }
    },

    "WAFAssociation": {
      "Type" : "AWS::WAFRegional::WebACLAssociation",
      "Properties" : {
        "ResourceArn" : { "Ref" : "AppLoadBalancer" },
        "WebACLId" : { "Fn::GetAtt": ["WAFOWASP", "Outputs.wafWebACL"] }
      }
    },


    "CodeDeployApplication": {
      "Type" : "AWS::CodeDeploy::Application",
      "Properties" : {
        "ApplicationName" : "csye6225-webapp",
        "ComputePlatform" : "Server"
      }
    },

    "DeploymentGroup":{
      "Type" : "AWS::CodeDeploy::DeploymentGroup",
      "Properties" : {
        "ApplicationName" : { "Ref": "CodeDeployApplication" },
        "DeploymentGroupName" : "csye6225-webapp-deployment",
        "AutoScalingGroups" : [{ "Ref" : "AutoScalingGroup" }],
        "DeploymentStyle": {
          "DeploymentType":  "IN_PLACE",
          "DeploymentOption": "WITHOUT_TRAFFIC_CONTROL"
        },
        "Ec2TagFilters":[{
          "Key" :"Name",
          "Type" : "KEY_AND_VALUE",
          "Value" : "CSYE6225-CF-DeploymentGroup"
        }],
        "ServiceRoleArn": { "Ref" : "ServiceRoleArn" },
        "DeploymentConfigName": "CodeDeployDefault.AllAtOnce",
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": ["DEPLOYMENT_FAILURE"]
        }
      }
    },

    "CodeDeployLambda": {
      "Type" : "AWS::CodeDeploy::Application",
      "Properties" : {
        "ApplicationName" : "csye6225-lambda",
        "ComputePlatform" : "Lambda"
      }
    },

    "DeploymentLambdaGroup":{
      "Type" : "AWS::CodeDeploy::DeploymentGroup",
      "Properties" : {
        "ApplicationName" : { "Ref": "CodeDeployLambda" },
        "DeploymentGroupName" : "csye6225-lambda-deployment",
        "DeploymentStyle": {
          "DeploymentType":  "BLUE_GREEN",
          "DeploymentOption": "WITH_TRAFFIC_CONTROL"
        },
        "ServiceRoleArn": { "Ref" : "ServiceRoleArn" },
        "DeploymentConfigName": "CodeDeployDefault.LambdaAllAtOnce",
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": ["DEPLOYMENT_FAILURE"]
        }
      }
    },

  }
}
